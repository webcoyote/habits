#!/usr/bin/env bash
# Run the project without building it
set -Eeuo pipefail
trap 'echo "${BASH_SOURCE[0]}: line $LINENO: $BASH_COMMAND: exitcode $?"' ERR
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR/.."
START_TIME=$(date +%s.%N)

# shellcheck source=scripts/simulator
[[ -n "${SIMULATOR_ID:-}" ]] || source "$SCRIPT_DIR/simulator"

# Check if simulator is already booted, boot if needed
SIMULATOR_STATE=$(xcrun simctl list devices | awk -v id="$SIMULATOR_ID" '$0 ~ id {split($0, a, /[()]/); print a[length(a)-1]}')
if [[ "$SIMULATOR_STATE" != "Booted" ]]; then
    echo "🔄 Booting simulator (current state: $SIMULATOR_STATE)"
    xcrun simctl boot "$SIMULATOR_ID" 2>/dev/null || true
fi

# Find the application
APP_PATH=$(find . -name "*.app" -path "*Debug-iphonesimulator*" -not -path "*Index*" -type d 2>/dev/null | head -1)
if [[ ! -d "$APP_PATH" ]]; then
    echo "❌ Could not find built app"
    echo "   Run 'scripts/build' first to build the app"
    exit 1
fi

# Extract bundle ID from Info.plist
BUNDLE_ID=$(/usr/libexec/PlistBuddy -c "Print CFBundleIdentifier" "$APP_PATH/Info.plist" 2>/dev/null)
if [[ -z "$BUNDLE_ID" ]]; then
    echo "❌ Could not extract bundle ID from $APP_PATH/Info.plist"
    exit 1
fi

echo "📦 Installing app ($BUNDLE_ID)"
xcrun simctl install "$SIMULATOR_ID" "$APP_PATH"

xcrun simctl launch "$SIMULATOR_ID" "$BUNDLE_ID" "$@" >/dev/null

# Open Simulator app to make window visible
echo "📱 Opening simulator"
open -a Simulator

END_TIME=$(date +%s.%N)
ELAPSED_TIME=$(echo "$END_TIME - $START_TIME" | bc --mathlib | xargs printf "%.2f\n")
echo "✅ Running in $ELAPSED_TIME seconds!"
